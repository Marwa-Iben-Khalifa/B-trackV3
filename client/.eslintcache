[{"/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/index.js":"1","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/App.js":"2","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/reportWebVitals.js":"3","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/auth/Signup.js":"4","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/api/apiServ.js":"5","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/auth/Login.js":"6","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/CrudServices/CRUDServices.js":"7","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/bugs/BugsList.js":"8","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/bugs/NewBug.js":"9","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/bugs/BugDetails.js":"10","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/auth/User-profil.js":"11","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/navs/Footer.js":"12","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/navs/Navbar.js":"13","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/home/Welcome.js":"14","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/home/Details.js":"15","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/home/Dashboard.js":"16"},{"size":724,"mtime":1607896437628,"results":"17","hashOfConfig":"18"},{"size":3399,"mtime":1607964039995,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1607862279342,"results":"20","hashOfConfig":"18"},{"size":8476,"mtime":1607960888740,"results":"21","hashOfConfig":"18"},{"size":2125,"mtime":1607967032390,"results":"22","hashOfConfig":"18"},{"size":2885,"mtime":1607936072523,"results":"23","hashOfConfig":"18"},{"size":9744,"mtime":1607952375832,"results":"24","hashOfConfig":"18"},{"size":6299,"mtime":1607952473443,"results":"25","hashOfConfig":"18"},{"size":7179,"mtime":1607952405039,"results":"26","hashOfConfig":"18"},{"size":10867,"mtime":1607954905126,"results":"27","hashOfConfig":"18"},{"size":9158,"mtime":1607952540312,"results":"28","hashOfConfig":"18"},{"size":355,"mtime":1607904550026,"results":"29","hashOfConfig":"18"},{"size":2660,"mtime":1607946192097,"results":"30","hashOfConfig":"18"},{"size":1459,"mtime":1607952135496,"results":"31","hashOfConfig":"18"},{"size":1830,"mtime":1607940131172,"results":"32","hashOfConfig":"18"},{"size":5897,"mtime":1607952325592,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ossrx9",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"36"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"36"},"/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/index.js",[],["80","81"],"/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/App.js",[],"/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/reportWebVitals.js",[],"/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/auth/Signup.js",["82","83","84"],"import React, { Component } from 'react'\nimport { Link, Redirect } from 'react-router-dom';\nimport { Button, Modal, Form, FormGroup, Row, Alert, Spinner } from 'react-bootstrap';\nimport srv from'../api/apiServ'\n\n\nexport default class Signup extends Component {\n  state = {\n    firstname: \"\",\n    lastname: \"\" ,\n    service: \"\",\n    role: \"\" ,\n    email: \"\" ,\n    password: \"\" ,\n    confirmPassword: \"\",\n    imageURL:\"https://res.cloudinary.com/dshuazgaz/image/upload/v1602411437/avatar_el8zal.webp\",\n    errorMessage:[],\n    listOfServices:[...this.props.listOfServices]\n  };\n\n  // componentDidMount() {\n  //   this.getAllServices();\n  // }\n  \n  // getAllServices = () =>{\n  //   srv.serviceList()\n  //   .then(response => {\n  //     console.log(\"services list\", response)\n  //     this.setState({\n  //       listOfServices: response\n  //     })\n  //   })\n  // }\n  \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    srv.signup(this.state.firstname, this.state.lastname, this.state.service, this.state.role, this.state.email, this.state.password, this.state.confirmPassword, this.state.imageURL)\n    .then((response) => {  \n      console.log('apiURL', srv.srv)    \n      // 2. then, update with user infos\n      // srv.edit(this.state.firstname, this.state.lastname, this.state.service, this.state.role, this.state.password, this.state.confirmPassword, this.state.imageURL)\n      // .then(response => {\n        this.setState({firstname: \"\", lastname: \"\" , service: \"\", role: \"\", email: \"\" , password: \"\" , confirmPassword: \"\", imageURL:\"https://res.cloudinary.com/dshuazgaz/image/upload/v1602411437/avatar_el8zal.webp\", errorMessage:[] });\n        console.log('user', response)\n        this.props.updateUser(response);\n        this.props.history.push('/dashboard');        \n      // })\n      // .catch((error)=> this.setState({errorMessage:error.response.data.message}))\n    })\n    .catch((error)=> this.setState({errorMessage:error.response.data.message}))\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n\n  handleUpload=(event) =>{\n    const uploadData = new FormData();\n    uploadData.append('imageURL', event.target.files[0]);\n    srv.upload(uploadData)\n    .then(response =>{\n      this.setState({ imageURL: response.imageURL });\n    })\n    .catch(err => {\n      console.log('Error while uploading the file: ', err);\n    });\n\n  }\n\n  handleReset = (event) => {\n    this.setState({firstname: \"\",lastname: \"\" , service: \"\", role: \"\", email: \"\" , password: \"\" , confirmPassword: \"\", imageURL:\"https://res.cloudinary.com/dshuazgaz/image/upload/v1602411437/avatar_el8zal.webp\", errorMessage:[]})\n  }\n\n  showContainer = () => {\n    return(\n      <div>\n        <Button variant=\"primary\" disabled>\n          <Spinner\n            as=\"span\"\n            animation=\"grow\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n          Loading...\n        </Button>\n      </div>\n    )\n  }\n\n  render() {\n    if(!this.state.listOfServices) return this.showContainer()\n    // if(this.props.user._id) return <Redirect to=\"/dashboard\"/>\n    return (\n      <Modal className=\"modal fade\" id=\"orangeModalSubscription\" tabIndex=\"-1\" role=\"dialog\" show={true} style={{backgroundColor:\"#515ea261\"}} >\n        <Form className=\"modal-content form-elegant container-fluid \" onSubmit={this.handleFormSubmit} onReset={this.handleReset}> \n          <Modal.Header className=\"modal-header text-center\">\n            <h4 className=\"modal-title  w-100 font-weight-bold py-2\" style={{color:\"#0e3662\" , fontSize:\"40px\"}}>Sign up</h4>\n            <Link className=\"close\" to=\"/\"> X </Link> \n          </Modal.Header>\n\n          {this.state.errorMessage.length > 0 && (\n            <div> {this.state.errorMessage.map((el, index)=> \n              (\n              <Alert key={index} variant={'danger'}>{el}</Alert>\n              ))} \n            </div>\n          )}        \n          \n          <Modal.Body className=\"modal-body\">\n              \n            <Row className=\"\">\n              <FormGroup className=\"md-form\">                  \n                <i className=\"fa fa-user prefix grey-text\"></i>\n                <input  type=\"text\" name=\"firstname\" placeholder=\"Firstname\" className=\"form-control validate \" id=\"inputFirstName\"  value={this.state.firstname} onChange={this.handleChange} />\n                <label htmlFor=\"inputFirstName\"></label>\n\n              </FormGroup> \n              <FormGroup className=\"md-form ml-2\">\n                <i className=\"fa fa-user prefix grey-text\"></i>\n                <input type=\"text\" name=\"lastname\" placeholder=\"Lastname\" className=\"form-control validate\" id=\"inputLastname\" value={this.state.lastname} onChange={this.handleChange} />\n                <label htmlFor=\"inputLastname\"></label>\n              </FormGroup>\n            </Row>\n            \n            <Row className=\"row s\">\n              <FormGroup className=\"md-form  form-control signEmail\" style={{border:\"none\"}}>\n                <i className=\"fa fa-envelope prefix grey-text\"></i>\n                <input type=\"email\" name=\"email\" placeholder=\"Email adress\" className=\" validate \" id=\"inputEmail\"  value={this.state.email} onChange={this.handleChange}  />\n                <label data-error=\"wrong\" data-success=\"right\" htmlFor=\"inputEmail\"></label>\n              </FormGroup>\n            </Row>\n            \n            <Row className=\"row s\">\n              <FormGroup className=\"md-form \">\n                <i className=\"fa fa-lock prefix grey-text\"></i>\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control validate\" id=\"inputPassword\"  value={this.state.password} onChange={this.handleChange}/>\n                <label htmlFor=\"inputPassword\"></label>\n              </FormGroup>\n              <FormGroup className=\"md-form ml-2\">\n                <i className=\"fas fa-lock prefix grey-text\"></i>\n                <input type=\"password\" name=\"confirmPassword\" className=\"form-control validate\" id=\"inputConfirmPassword\"\n                  value={this.state.confirmPassword} placeholder=\"Confirm Password\" onChange={this.handleChange} />\n                <label htmlFor=\"inputConfirmPassword\"></label>\n              </FormGroup>\n            </Row>\n\n            <Row className=\"row s\">\n              <FormGroup className=\"md-form custom-file\">\n                <i className=\"fa fa-camera prefix grey-text\"></i>\n                <input type=\"file\" className=\"custom-file-input\" name=\"image\" id=\"input-image\" onChange={this.handleUpload}/>\n                <label  htmlFor=\"input-image\" value={this.state.imageURL} >Choose Avatar</label>\n              </FormGroup>\n            </Row>\n\n            <Row className=\"row s\">\n              <Form.Control as=\"select\" className=\"mr-sm-2 mt-2\" id=\"inlineFormCustomSelect\" value={this.state.service} name=\"service\" id=\"inputService\" onChange={(this.handleChange)} style={{border:\"none\", borderBottom: \"1px solid #D9DEE0\"}} custom>\n                    {/* afficher tous les services dans une boite select */}\n                    <option value=\"\">Service</option>\n                    {this.state.listOfServices.map( service => {\n                      return (\n                        <option key={service._id} value={service._id}>{service.name}</option>\n                      )})\n                    } \n              </Form.Control>\n              <Form.Control as=\"select\"\n                className=\"mr-sm-2 mt-2\" id=\"inlineFormCustomSelect\" value={this.state.role} name=\"role\" id=\"inputRole\" onChange={this.handleChange} style={{border:\"none\", borderBottom: \"1px solid #D9DEE0\"}} custom>\n                <option value=\"\">Role</option>\n                <option value=\"manager\">Manager</option>\n                <option value=\"employee\">Employee</option>\n                <option value=\"validator\">Validator</option>                    \n              </Form.Control>\n            </Row>\n          \n            <div className=\"modal-footer justify-content-center mb-3 mt-3\">\n              <Button type=\"submit\" size=\"lg\" className=\"btn-block btn-outline-secondary\" style={{fontWeight: \"bold\"}}>Register</Button>\n              <Button type=\"reset\" className=\"btn btn-rounded btn-black \" style={{backgroundColor:\"#3f51b552\"}}>Reset</Button>\n            </div>\n          \n            Already registered <Link to=\"/login\">Log in</Link>\n          </Modal.Body>\n        </Form>  \n      </Modal>\n    )\n  }\n}\n\n","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/api/apiServ.js",["85"],"import axios from 'axios'\n\n\nconst errorHandler = err => {\n  throw err;\n};\nlet srv=axios.create({\n  baseURL: `${process.env.REACT_APP_APIURL || \"/api\"}`, \n  withCredentials:true\n})\n\nexport default{\n  srv,\n\n  login(email, password) {\n    return this.srv.post('/login', {email, password})\n      .then(response => response.data)\n      // .catch(errorHandler);\n  },\n\n  signup(firstname, lastname, service, role, email, password, confirmPassword, imageURL) {\n    return this.srv.post('/signup', {\n      firstname, \n      lastname, \n      service, \n      role, \n      email, \n      password, \n      confirmPassword,\n      imageURL\n    })\n      .then(response => response.data)\n      .catch(errorHandler);\n  },\n\n  loggedin() {\n    return this.srv.get('/loggedin')\n      .then(response => response.data)\n      .catch(errorHandler);\n  },\n\n  logout() {\n    return this.srv.get('/logout', {})\n      .then(response => response.data)\n      .catch(errorHandler);\n  },\n\n  edit(firstname, lastname, service, role, password, confirmPassword, imageURL) {\n    return this.srv.post('/edit', {\n      firstname, \n      lastname, \n      service, \n      role, \n      password,\n      confirmPassword,\n      imageURL\n    })\n      .then(response => response.data)\n      .catch(errorHandler);\n  },\n\n  upload(formdata) {\n    return this.srv.post('/upload', formdata)\n      .then(response => response.data)\n      .catch(errorHandler);\n  },\n\n  newBug(title, description, solution, services, status, severity){\n    return this.srv.post('/new-bug', {\n      title, \n      description, \n      solution, \n      services, \n      status, \n      severity \n    })\n    .then(response => response.data)\n    .catch(errorHandler);\n  },\n  \n  bugsList(){\n    return this.srv.get('/bugs')\n    .then(response => response.data)\n    .catch(errorHandler);\n  },\n\n  serviceList(){\n    return this.srv.get('/services')\n    .then(response => response.data)\n    .catch(errorHandler);\n  },\n\n  newService(name, phone, email){\n    return this.srv.post('/new-service',{\n      name, \n      phone,\n      email\n    })\n    .then(response => response.data)\n    .catch(errorHandler);\n  }\n  \n}","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/auth/Login.js",["86","87"],"import React, { Component } from 'react'\nimport { Link , Redirect} from 'react-router-dom';\nimport srv from '../api/apiServ';\n\nimport { Button, Modal, Form, FormGroup, Alert } from 'react-bootstrap';\n\n\n\nexport default class  Login extends React.Component {\n  state ={\n    email: \"\" ,\n    password: \"\" ,\n    error:\"\"\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    srv.login(this.state.email, this.state.password)\n      .then(response => {\n        this.setState({error: \"\"});\n        this.props.updateUser(response);\n        console.log(response)\n        this.props.history.push('/dashboard');\n      })\n      .catch(error => this.setState({error: error.response.data.message}))\n    ;\n  }\n\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n\n  handleReset = (event) => {\n    this.setState({email: \"\",password: \"\" , error: \"\"})\n  }\n\n  render() {\n    return (\n      \n      <Modal className=\"modal fade \" id=\"orangeModalSubscription\" tabIndex=\"-1\" role=\"dialog\" show={true} style={{backgroundColor:\"#515ea261\"}} >\n        <Form className=\"modal-content form-elegant\" onSubmit={this.handleSubmit} onReset={this.handleReset}>\n          <Modal.Header className=\"modal-header text-center\">\n              <h4 className=\"modal-title  w-100 font-weight-bold py-2\" style={{color:\"#0e3662\" , fontSize:\"40px\"}}>Log In</h4>\n              <Link className=\"close\" to=\"/\"> X </Link>\n          </Modal.Header>\n          {this.state.error.length > 0  && (\n              <Alert key={'111'} variant={'danger'}>{this.state.error}</Alert>\n            )}\n          <Modal.Body className=\"modal-body\">\n            <FormGroup className=\"md-form mb-2\">\n              <i className=\"fa fa-envelope prefix grey-text\"></i>\n              <input type=\"email\" name=\"email\" placeholder=\"Email adress\" className=\"form-control validate\" id=\"inputEmail\"  value={this.state.email} onChange={this.handleChange} />\n              <label data-error=\"wrong\" data-success=\"right\" htmlFor=\"inputEmail\"></label>\n            </FormGroup>\n            <FormGroup className=\"md-form mb-2\">\n              <i className=\"fas fa-lock prefix grey-text\"></i>\n              <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control validate\" id=\"inputPassword\"  value={this.state.password} onChange={this.handleChange}/>\n              <label htmlFor=\"inputPassword\"></label>\n            </FormGroup>\n          </Modal.Body>\n          <div className=\"modal-footer justify-content-center mb-3\">\n            <Button type=\"submit\" size=\"lg\" className=\"btn btn-block btn-rounded  btn-outline-secondary \" style={{fontWeight: \"bold\"}}>LogIn<i className=\"fas fa-paper-plane-o ml-1\"></i></Button>\n            <Button type=\"reset\" className=\"btn btn-black\">Reset</Button>\n          </div>\n        </Form>\n      </Modal>\n            \n    )\n  }\n}\n","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/CrudServices/CRUDServices.js",["88","89","90","91","92"],"import React, { Component } from 'react'\nimport { Link, Redirect } from 'react-router-dom';\nimport srv from '../api/apiServ';\nimport { Button, Modal, Form, Row, Alert , Col, InputGroup, Table, Container, Spinner} from 'react-bootstrap';\nimport axios from 'axios'\nimport Navbar from '../navs/Navbar'\nimport Footer from '../navs/Footer'\n\n\n\n\n\nexport default class CRUDServices extends Component {\n  state={\n    // user:null,\n    listOfServices:[],\n    show: false,\n    dataId:\"\",\n    name:\"\",\n    phone:\"\",\n    email:\"\",\n    errorMessage:[],\n    errorMessageEdit:[],\n    sortby:\"\",\n    query:\"\",\n    connected:false\n  }\n\n  // componentDidUpdate(prevProps, prevState){\n  //   if (!prevProps.user._id && this.props.user._id) {\n  //     console.log ('componentDidUpdate', this.props.user)\n  //     this.setState({user:{...this.props.user}})\n  //   } \n  // }\n  \n  componentDidMount() {\n    this.getAllServices();\n  }\n\n  getAllServices = () =>{\n    srv.serviceList()\n    .then(response => {\n      console.log(\"services list\", response)\n      this.setState({\n        listOfServices: response\n      })\n    })\n  }\n\n  deleateService=(id)=> {\n    srv.srv.get(`/delete-service/${id}`)\n    .then(\n      this.getAllServices()\n    )\n    .catch((error)=> this.setState({errorMessage:error.response.data.message}))\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n\n  // Update the `query` state on change\n  handleQuery = (ev) => {\n    this.setState({\n      query: ev.target.value\n    })\n  }\n\n  handleFormEdit= (event)=>{\n    event.preventDefault();\n    const name= this.state.name;\n    const phone= this.state.phone;\n    const email= this.state.email;\n    const id = this.state.dataId;\n    srv.srv.put(`/service/${id}`, {name, phone, email})\n      .then(() => {  \n        console.log(`name: ${name} phone:${phone} email:${email}`)\n        this.getAllServices()          \n        this.setState({name: \"\", phone: \"\", email: \"\", dataId:\"\",errorMessageEdit:[], show: false});\n      })\n      .catch((error)=> this.setState({errorMessageEdit:error.response.data.message}))\n\n  }\n\n  handleFormSubmit= (event)=>{\n    event.preventDefault();\n    const name= this.state.name;\n    const phone= this.state.phone;\n    const email= this.state.email;\n    srv.newService(name, phone, email)\n      .then(() => {  \n        this.setState({name: \"\", phone: \"\", email: \"\", errorMessage:[]});\n        this.getAllServices()\n      })\n      .catch((error)=> this.setState({errorMessage:error.response.data.message}))\n\n  }\n\n  handleReset = (event) => {\n    this.setState({name:\"\", phone:\"\", email:\"\", errorMessageEdit:[], errorMessage:[]})\n  }\n\n  // showContainer = () => {\n  //   return(\n  //     <div>\n  //       <Button variant=\"primary\" disabled>\n  //         <Spinner\n  //           as=\"span\"\n  //           animation=\"grow\"\n  //           size=\"sm\"\n  //           role=\"status\"\n  //           aria-hidden=\"true\"\n  //         />\n  //         Loading...\n  //       </Button>\n  //     </div>\n  //   )\n  // }\n  \n  render() {\n    let serv = [...this.state.listOfServices]; // make a copy (prevent mutating if .sort)\n    const query = this.state.query;\n\n    // sort by name\n    if (this.state.sortby === 'name') {\n      serv.sort((a, b) => a.name.localeCompare(b.name))\n    }\n\n    // sort by popularity\n    if (this.state.sortby === 'email') {\n      serv.sort((a, b) => a.email.localeCompare(b.email))\n    }\n    \n    // Filter `services` with `query`\n    if (query) {\n      serv = serv.filter(service => service.name.includes(query))\n    } \n    console.log(\"user:\",this.props);\n\n    // if (this.state.user === null) return this.showContainer()\n    // if (this.state.user === false) return <Redirect to=\"/\"/>\n    return (\n      <Container fluid>\n        <Navbar user={this.props.user} updateUser={this.props.updateUser} history={this.props.history}/>\n        <Container className=\"border\"style={{color: \"#300032\", fontWeight:\"bolder\", marginBottom:\"60px\", height:\"100%\"}}  >\n          <h2 >Services list</h2>\n          <Row className=\"fluid\">\n            <Form.Control as=\"select\"\n              className=\"col-md-1 md-form\"\n              id=\"inlineFormCustomSelect\" \n              value={this.state.sortby}\n              name=\"sort\"\n              id=\"sortList\"\n              onChange={(e)=> this.setState({sortby: e.target.value})}\n              custom>\n              <option value=\"default\">Sort by...</option>\n              <option value=\"name\">Name</option>\n              <option value=\"email\">Email</option>                    \n            </Form.Control>\n            <InputGroup className=\"col-md-4 md-form ml-2 \">\n              <i className=\"fas fa-search prefix grey-text\" style={{left: \"0px\"}}></i>\n              <Form.Control className=\" md-form\"  type=\"search\" placeholder=\"Search\" value={this.state.query} onChange={this.handleQuery} />\n            </InputGroup>\n          </Row>\n          <Table striped bordered hover responsive=\"sm\" >\n            <thead>\n              <tr>\n                <td>Name</td>\n                <td>Phone</td>\n                <td>E-mail</td>\n                <td>Action</td>\n              </tr>\n            </thead>\n            <tbody>\n              {serv.map( service => {\n                return (\n                <tr key={service._id}>\n                  <td>{service.name}</td>\n                  <td>{service.phone}</td>\n                  <td>{service.email}</td>\n                  <td className=\"d-flex flex-row-reverse\">\n                    <Button variant=\"danger\" onClick={(event)=>{this.deleateService( service._id)}}>\n                      <i className=\"fas fa-trash-alt\" ></i></Button>\n                    <Button  variant=\"info\"  data-target=\"#editModal\" onClick={()=> this.setState({show:true, dataId:service._id, name:service.name, phone:service.phone, email:service.email })}> \n                    <i className=\"far fa-edit\" ></i> </Button>\n                  </td>\n                </tr>\n                )})\n              }\n            </tbody>\n          </Table>\n          \n          <Form  onSubmit={this.handleFormSubmit} onReset={this.handleReset}>\n            {this.state.errorMessage.length > 0 && (\n              <div> {this.state.errorMessage.map((el, index)=> \n                (\n                <Alert key={index} variant={'danger'}>{el}</Alert>\n                ))} \n              </div>\n            )}\n            <Row responsive={true} className=\"md-form\">\n              <Col sm>\n                <InputGroup className=\"input-group-lg\"></InputGroup> \n                <Form.Control type=\"text\" aria-label=\"Large\"\n                  aria-describedby=\"inputGroup-sizing-sm\" name=\"name\" placeholder=\"Name\" value={this.state.name} onChange={this.handleChange} />\n              </Col>\n              <Col sm>\n                <InputGroup className=\" input-group-lg\"></InputGroup>\n                <Form.Control  aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" name=\"phone\"\n                  placeholder=\"Phone\" value={this.state.phone} onChange={this.handleChange} />\n              </Col>\n    \n              <Col sm>\n                <InputGroup className=\"input-group-lg\"></InputGroup>\n                <Form.Control type=\"text\"  aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" name=\"email\"\n                  placeholder=\"Mail\" value={this.state.email} onChange={this.handleChange}/>\n              </Col>\n                    \n              <Col sm className=\"d-flex flex-row-reverse\">\n                <Button type=\"submit\" variant=\"primary\"><i className=\" mr-1 far fa-save\"></i></Button>\n                <Button type=\"reset\" variant=\"secondary\" ><i className=\"fas fa-trash-alt \"></i></Button>\n              </Col>\n            </Row>\n          </Form>\n              \n        </Container>\n\n\n        <Modal id=\"editService\" tabIndex=\"-1\" role=\"dialog\" show={this.state.show}>\n          <Modal.Header>\n            <Modal.Title  id=\"editModalLabel\">Edit Service</Modal.Title>\n            <Button  onClick={()=> this.setState({show:false, errorMessageEdit:[], dataId:\"\", name:\"\", phone:\"\", email:\"\"})}>\n              <span >&times;</span>\n            </Button>\n          </Modal.Header>\n          \n          {this.state.errorMessageEdit.length > 0 && (\n            <div> {this.state.errorMessageEdit.map((el, index)=> \n              (\n              <Alert key={index} variant={'danger'}>{el}</Alert>\n              ))} \n            </div>\n          )}\n          \n          <Form id=\"popup-edit-from\" onSubmit={this.handleFormEdit} onReset={this.handleReset}>\n            <Modal.Body>\n              <Form.Group >\n                <Form.Label htmlFor=\"popup-service-name\" >Name:</Form.Label>\n                <Form.Control id=\"popup-service-name\" name=\"name\" type=\"text\"  value={this.state.name} onChange={this.handleChange}/>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label htmlFor=\"popup-service-phone\" >Phone:</Form.Label>\n                <Form.Control id=\"popup-service-phone\" name=\"phone\" type=\"text\"  value={this.state.phone} onChange={this.handleChange}/>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label htmlFor=\"popup-service-email\" >Email:</Form.Label>\n                <Form.Control id=\"popup-service-email\" name=\"email\" type=\"text\"  value={this.state.email} onChange={this.handleChange}/>\n              </Form.Group>              \n            </Modal.Body>\n            <Modal.Footer>\n              <Button type=\"reset\" variant=\"secondary\" >Reset</Button>\n              <Button type=\"submit\" variant=\"primary\"><i className=\" mr-1 far fa-save\"></i>Save</Button>\n            </Modal.Footer>\n          </Form>   \n        </Modal>\n        <Footer/>\n      </Container>      \n    )\n  }\n}\n","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/bugs/BugsList.js",["93","94","95","96"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport srv from '../api/apiServ';\nimport Navbar from '../navs/Navbar'\nimport Footer from '../navs/Footer'\nimport { Button, Form,  Row, Container, Table, InputGroup, Spinner} from 'react-bootstrap';\n\nimport { Link, Redirect } from 'react-router-dom';\n\n\nexport default class BugsList extends Component {\n  state={\n    // user: null,\n    bugs:[],\n    sortby:\"\",\n    query:\"\"\n  };\n\n  // componentDidUpdate(prevProps, prevState){\n  //   if (!prevProps.user._id && this.props.user._id) {\n  //     console.log ('componentDidUpdate', this.props.user)\n  //     this.setState({user:{...this.props.user}})\n  //   } \n  // }\n\n  deleateBug=(id)=> {\n    srv.srv.get(`/bug-remove/${id}`)\n    .then(\n      this.getBugsFromApi()\n    )\n    .catch((error)=> this.setState({errorMessage:error.response.data.message}))\n  }\n\n  handleQuery = (ev) => {\n    this.setState({\n      query: ev.target.value\n    })\n  }\n  \n  getBugsFromApi = () =>{\n    srv.srv.get(`/bugs`)\n    .then(response => {\n      this.setState({\n        bugs: response.data\n      })\n    })\n  }\n\n  componentDidMount() {\n    this.getBugsFromApi();\n  }\n\n  // showContainer = () => {\n  //   return(\n  //     <div>\n  //       <Button variant=\"primary\" disabled>\n  //         <Spinner\n  //           as=\"span\"\n  //           animation=\"grow\"\n  //           size=\"sm\"\n  //           role=\"status\"\n  //           aria-hidden=\"true\"\n  //         />\n  //         Loading...\n  //       </Button>\n  //     </div>\n  //   )\n  // }\n\n\n  render() {\n    console.log(this.state.bugs)\n    let bugsList = [...this.state.bugs]; // make a copy (prevent mutating if .sort)\n    const query = this.state.query;\n\n    // sort by title\n    if (this.state.sortby === 'title') {      \n      bugsList.sort((a, b) => a.bug.title.localeCompare(b.bug.title))\n    }\n\n    // sort by rapporter\n    if (this.state.sortby === 'rapporter') {\n      bugsList.sort((a, b) => a.bug.rapporter.lastname.localeCompare(b.bug.rapporter.lastname))\n    }\n\n    // sort by date\n    if (this.state.sortby === 'date'){\n      bugsList.sort((a,b) => b.bug.rapportedAt.localeCompare(a.bug.rapportedAt))\n    }\n    \n    // Filter `Bugs` with `query`\n    if (query) {\n      if(this.state.sortby === 'rapporter'){\n        bugsList = bugsList.filter(b => b.bug.rapporter.lastname.includes(query))\n      }else if(this.state.sortby === 'date'){\n        bugsList = bugsList.filter(b => b.rapportedAt.rapportDay.includes(query))\n      }else{\n      bugsList = bugsList.filter(b => b.bug.title.includes(query))\n    } }\n    console.log(this.props.updateUser)\n    // if (this.state.user === null && !this.props.user._id) return this.showContainer()\n    // if (this.state.user === false) return <Redirect to=\"/\"/>\n    return (\n      <Container fluid>\n        <Navbar user={this.props.user} updateUser={this.props.updateUser} history={this.props.history}/>\n        <Container className=\"border\"style={{ color: \"#300032\", fontWeight:\"bolder\", marginBottom:\"60px\"}}>\n          <h2 >Bugs list</h2>\n          <Row className=\"fluid\">\n            <Form.Control as=\"select\"\n              className=\"col-md-1 md-form\"\n              id=\"inlineFormCustomSelect\" \n              value={this.state.sortby}\n              name=\"sort\"\n              id=\"sortList\"\n              onChange={(e)=> this.setState({sortby: e.target.value})}\n              custom>\n              <option value=\"default\">Sort by...</option>\n              <option value=\"title\">Title</option>\n              <option value=\"rapporter\">Rapporter</option> \n              <option value=\"date\">Date</option>                    \n            </Form.Control>\n            <InputGroup className=\"col-md-4 md-form \" style={{left: \"10px\"}}>\n              <i className=\"fas fa-search prefix grey-text\" style={{left: \"0px\"}} ></i>\n              <Form.Control className=\"md-form\"  type=\"search\" placeholder=\"Search\" value={this.state.query} onChange={this.handleQuery} />\n            </InputGroup>\n          </Row>\n          <Table striped bordered hover responsive=\"sm\">\n            <thead>\n              <tr>\n                <th>Title</th>\n                <th>Rapporter</th>\n                <th>Severity</th>\n                <th>Status</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {bugsList.map((el)=>(\n                <tr key={el.bug._id}>\n                  <td>{el.bug.title}</td>\n                  <td>{el.bug.rapporter.firstname} {el.bug.rapporter.lastname}\n                    <small className=\"text-secondary form-text text-muted mt-0\"> {el.bug.rapporter.email}</small>\n                    <small className=\"text-secondary form-text text-muted mt-0\">{el.rapportedAt.rapportDay} at\n                      {el.rapportedAt.rapportTime}</small>\n                  </td>\n                  {el.bug.severity=== \"Critical\"  ?\n                    <td style={{color:\"#752B3C\"}}><i className=\"fas fa-angle-double-up fa-2x\"></i></td>\n                  : el.bug.severity=== \"High\" ? \n                    <td style={{color:\"red\"}}><i className=\"fas fa-angle-double-up fa-2x\"></i></td>\n                  : el.bug.severity=== \"Medium\" ?\n                  <td style={{color:\"orange\"}}><i className=\"fas fa-angle-double-up fa-2x\"></i></td>\n                  : <td style={{color:\"green\"}}><i className=\"fas fa-angle-double-down fa-2x\"></i></td>\n                  }\n                  \n                  {el.bug.status=== \"Confirmed\"  ?\n                    <td style={{color:\"red\"}}>{el.bug.status}</td>\n                  : el.bug.status=== \"In Progress\" ?\n                  <td style={{color:\"orange\"}}>{el.bug.status}</td>\n                  : <td style={{color:\"green\"}}>{el.bug.status}</td>\n                  }\n                  <td className=\"d-flex flex-row-reverse\" style={{border: \"none\"}}>\n                    <Button variant=\"danger\" onClick={(event)=>{this.deleateBug(el.bug._id)}}><i\n                      className=\"fas fa-trash-alt\"></i></Button>\n                    <Link to={`/bug-details/${el.bug._id}`}><Button  variant=\"info\"><i className=\"fas fa-eye\"></i></Button></Link>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n        <Footer/>\n      </Container>      \n    )\n  }\n}\n","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/bugs/NewBug.js",["97","98","99","100"],"import React, { Component } from 'react'\nimport axios from 'axios';\nimport srv from '../api/apiServ'\nimport Navbar from '../navs/Navbar'\nimport Footer from '../navs/Footer'\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { Button, Form, Row, Alert , Col, Container, FormControl, Spinner} from 'react-bootstrap';\n\n\n\nexport default class NewBug extends Component {\n  state={\n    // user:null,\n    title:\"\",\n    description:\"\",\n    solution:\"\",\n    services: [],\n    status:\"\",\n    severity:\"\",\n    listOfServices:[],\n    errorMessage:[]  \n  }\n\n  // componentDidUpdate(prevProps, prevState){\n  //   if (!prevProps.user._id && this.props.user._id) {\n  //     console.log ('componentDidUpdate', this.props.user)\n  //     this.setState({user:{...this.props.user}})\n  //   } \n  // }\n\n  componentDidMount() {\n    this.getAllServices();\n  }\n\n  getAllServices = () =>{\n    srv.serviceList()\n    .then(response => {\n      console.log(\"services list\", response)\n      this.setState({\n        listOfServices: response\n      })\n    })\n  }\n\n  \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    srv.newBug(this.state.title, this.state.description, this.state.solution, this.state.services, this.state.status, this.state.severity)\n    .then((res) => {      \n      console.log(\"ok!\")\n      this.setState({title:\"\", description:\"\", solution:\"\", services: [], status:\"\", severity:\"\", errorMessage:[] });\n      // this.props.updateUser(response);\n      this.props.history.push('/bugs-list');        \n    })\n    .catch((error)=> this.setState({errorMessage:error.response.data.message}))\n  }\n\n  handleChange = (event) => {  \n    const target = event.target;\n    const name = target.name;\n    const serv= this.state.services;\n    target.type === 'checkbox' \n    ? \n    (this.setState({services:[...serv , target.value]}))\n    : \n    this.setState({[name]: target.value});\n  }\n\n  handleReset = (event) => {\n    this.setState({title:\"\", description:\"\", solution:\"\", services: [], status:\"\", severity:\"\", errorMessage:[]  })\n  }\n\n  // showContainer = () => {\n  //   return(\n  //     <div>\n  //       <Button variant=\"primary\" disabled>\n  //         <Spinner\n  //           as=\"span\"\n  //           animation=\"grow\"\n  //           size=\"sm\"\n  //           role=\"status\"\n  //           aria-hidden=\"true\"\n  //         />\n  //         Loading...\n  //       </Button>\n  //     </div>\n  //   )\n  // }\n\n  render() {\n    // if (this.state.user === null) return this.showContainer()\n    // if (this.state.user === false) return <Redirect to=\"/\"/>\n    return (\n      <Container fluid>\n        <Navbar user={this.props.user} updateUser={this.props.updateUser} history={this.props.history}/>\n        <Container className=\"border\" style={{textAlign:\"left\" , color: \"#300032\", fontWeight:\"bolder\", marginBottom:\"60px\"}}>\n          {this.state.errorMessage.length > 0 && (\n            <div> {this.state.errorMessage.map((el, index)=> \n              (\n              <Alert key={index} variant={'danger'}>{el}</Alert>\n              ))} \n            </div>\n          )}\n          <Form onSubmit={this.handleFormSubmit} onReset={this.handleReset}>\n\n            <Form.Group as={Row}>\n              <h3 className=\"col-sm-10 mt-1\" >New Bug</h3>\n              <small className=\"text-secondary form-text text-muted mt-0\">\n                Fill all the fields then click on Add in order to create a new bug.\n              </small>\n            </Form.Group >\n\n            <Form.Group as={Col} md=\"10\"  htmlFor=\"title\">\n              <Form.Label className=\"mb-3\" as={Row}>Title:</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"title\"\n                value={this.state.title}\n                onChange={this.handleChange}\n                placeholder=\"Ex: Error when...\"\n                id=\"title\"\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group as={Col} md=\"10\">\n              <Form.Label className=\"mb-3\" htmlFor=\"des\" as={Row}>Description:</Form.Label>\n              <FormControl as=\"textarea\" id=\"des\"  name=\"description\" rows=\"3\" \n              placeholder=\"Ex: Some solution...\" onChange={this.handleChange}></FormControl>\n            </Form.Group>\n          \n            <Form.Group as={Col} md=\"10\">\n              <Form.Label className=\"mb-3\" htmlFor=\"sol\" as={Row}>Solution:</Form.Label>\n              <FormControl as=\"textarea\" id=\"sol\"  name=\"solution\" rows=\"3\" \n              placeholder=\"Ex: Some solution...\" onChange={this.handleChange}></FormControl>\n            </Form.Group> \n            \n            <Row>\n\n              <Form.Group as={Col}>\n                <Form.Label className=\"mb-3\" as={Row} >Severity:</Form.Label>\n                <Form.Group id=\"formGridRadio\">\n                  <Form.Check type=\"radio\" label=\"Critical\" name=\"severity\" defaultChecked value=\"Critical\" onChange={this.handleChange}/>\n                </Form.Group>\n                <Form.Group id=\"formGridRadio\">\n                  <Form.Check type=\"radio\" label=\"High\" name=\"severity\" value=\"High\" onChange={this.handleChange}/>\n                </Form.Group>\n                <Form.Group id=\"formGridRadio\">\n                  <Form.Check type=\"radio\" label=\"Medium\" name=\"severity\" value=\"Medium\" onChange={this.handleChange}/>\n                </Form.Group>\n                <Form.Group id=\"formGridRadio\">\n                  <Form.Check type=\"radio\" label=\"Low\" name=\"severity\" value=\"Low\" onChange={this.handleChange}/>\n                </Form.Group>\n              </Form.Group>\n\n              <Form.Group as={Col}>\n                <Form.Label className=\"mb-3\" as={Row} >Status:</Form.Label>\n                <Form.Group id=\"formGridRadio\">\n                  <Form.Check type=\"radio\" label=\"Confirmed\" name=\"status\" defaultChecked value=\"Confirmed\" onChange={this.handleChange}/>\n                </Form.Group>\n                <Form.Group id=\"formGridRadio\">\n                  <Form.Check type=\"radio\" label=\"InProgress\" name=\"status\" value=\"In Progress\" onChange={this.handleChange}/>\n                </Form.Group>\n                <Form.Group id=\"formGridRadio\">\n                  <Form.Check type=\"radio\" label=\"Resoveld\" name=\"status\" value=\"Resolved\" onChange={this.handleChange}/>\n                </Form.Group>                  \n              </Form.Group>\n\n              <Form.Group as={Col} >\n                <Form.Label className=\"mb-3\" as={Row}>Services:</Form.Label>\n                {this.state.listOfServices.map( service => {\n                  return (\n                    <Form.Group id=\"formGridCheckbox\" key={service._id}>\n                      <Form.Check  name=\"services\" type=\"checkbox\" label={service.name} value={service._id} onChange={this.handleChange}/>\n                    </Form.Group>\n                  )})\n                } \n                \n              </Form.Group>\n            </Row>\n\n            <Button type=\"reset\" variant=\"secondary\" >Reset</Button>\n            <Button type=\"submit\" variant=\"primary\"><i className=\" mr-1 far fa-save\"></i>Save</Button>\n\n          </Form>\n\n        </Container>\n        <Footer/>\n      </Container>\n    \n    )\n  }\n}\n","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/bugs/BugDetails.js",["101","102","103","104"],"import React, { Component } from 'react'\nimport axios from 'axios';\nimport srv from '../api/apiServ';\nimport Navbar from '../navs/Navbar'\nimport Footer from '../navs/Footer'\n\n\nimport { Button, Modal, Form, Row, Alert, FormControl, Container, Spinner } from 'react-bootstrap';\n\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\n\n\nimport { Redirect } from 'react-router-dom';\n\n\n\n\nexport default class BugDetails extends React.Component {\n  state = {\n    bug: \"\",\n    rapportedAt: \"\",\n    solutions: [],\n    services: [],\n    rapporter: {},\n    \n    status: \"\",\n    severity: \"\",\n    solution: \"\",\n    errorMessage:[],\n    show: false\n  };\n\n  getBugFromApi = () => {\n    const { params } = this.props.match;\n    srv.srv.get(`/details/${params.id}`)\n      .then(response => {\n        console.log('coucou', response.data)\n        this.setState({\n          bug: response.data.result,\n          rapportedAt: response.data.rapportedAt,\n          solutions: response.data.solutions,\n          services: response.data.result.services,\n          rapporter: response.data.result.rapporter\n        })\n      })\n  }\n\n  componentDidMount() {\n    this.getBugFromApi();\n  }\n\n  handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const serv = this.state.services;\n    target.type === 'checkbox'\n      ?\n      (this.setState({ services: [...serv, target.value] }))\n      :\n      this.setState({ [name]: target.value });\n  }\n\n  // componentDidUpdate(prevProps, prevState){\n  //   if (!prevProps.user._id && this.props.user._id) {\n  //     console.log ('componentDidUpdate', this.props.user)\n  //     this.setState({user:{...this.props.user}})\n  //   } \n  // }\n\n  // showContainer = () => {\n  //   return(\n  //     <div>\n  //       <Button variant=\"primary\" disabled>\n  //         <Spinner\n  //           as=\"span\"\n  //           animation=\"grow\"\n  //           size=\"sm\"\n  //           role=\"status\"\n  //           aria-hidden=\"true\"\n  //         />\n  //         Loading...\n  //       </Button>\n  //     </div>\n  //   )\n  // }\n\n  handleFormSubmit= (event)=>{\n    event.preventDefault();\n    const {status, severity, solution}= this.state;\n    const { params } = this.props.match;\n    srv.srv.post(`/solution/${params.id}`, {status, severity, solution})\n      .then(() => {\n        this.setState({show:false, status: \"\", severity: \"\", solution: \"\",errorMessage:[], });\n        this.getBugFromApi() \n        // this.props.history.push(`/bug-details/${params.id}`);\n        console.log('hello', this.state)\n      })\n      .catch((error)=> this.setState({errorMessage:error.response.data.message}))\n\n  }\n\n  handleReset = (event) => {\n    this.setState({status: \"\", severity: \"\", solution: \"\", errorMessage:[]})\n  }\n  \n\n  render() {\n    // if (this.state.user === null && !this.props.user._id) return this.showContainer()\n    // if (this.state.user === false) return <Redirect to=\"/\"/>\n    return (\n      <Container  fluid>\n        <Navbar user={this.props.user} updateUser={this.props.updateUser} history={this.props.history}/>\n        <Container className=\"border\" style={{textAlign:\"left\" , color: \"#300032\", fontWeight:\"bolder\", marginBottom:\"60px\"}}>\n          <div className=\"border pl-3 \"  >\n            <h3 >Bug Overview</h3>\n          </div>\n          <Row className=\"my-2\">\n            <div className=\"col-4\">Title</div>\n            <p className=\"col-8\">{this.state.bug.title}</p>\n          </Row>\n\n          <Row className=\"mb-2 border-top\">\n            <div className=\"col-4\">Rapported by</div>\n            <div className=\"col-8\">\n              <div>\n                <label className=\"mb-0\">{this.state.rapporter.firstname} {this.state.rapporter.lastname}</label>\n                <small className=\" form-text text-muted mt-0 \"> {this.state.rapportedAt.rapportDay} at\n                  {this.state.rapportedAt.rapportTime}</small>\n              </div>\n            </div>\n          </Row>\n\n          <Row className=\"mb-2 border-top\">\n            <div className=\"col-4\">Services</div>\n            <div className=\"col-8\">                \n              {this.state.services.map((el) => (\n                <div key={el._id}>\n                  <label className=\"mb-0\">{el.name}</label>\n                  <small className=\" form-text text-muted mt-0 \">{el.email}</small>\n                </div>\n              ))}\n            </div>\n          </Row>\n\n          <Row className=\"mb-2 border-top\">\n            <div className=\"col-4\">Status</div>\n            {this.state.bug.status=== \"Confirmed\"  ?\n              <p style={{color:\"red\"}} className=\"col-8\">{this.state.bug.status}</p>\n            : this.state.bug.status=== \"In Progress\" ?\n            <p style={{color:\"orange\"}} className=\"col-8\">{this.state.bug.status}</p>\n            : <p style={{color:\"green\"}} className=\"col-8\">{this.state.bug.status}</p>\n            }\n          </Row>  \n            \n          <Row className=\"mb-2 border-top\">\n            <div className=\"col-4\">Severity</div>\n            {this.state.bug.severity=== \"Critical\" || this.state.bug.severity=== \"High\" ?\n              <p className=\"col-8\" style={{color:\"red\"}}>{this.state.bug.severity}</p>\n            : this.state.bug.severity=== \"Medium\" ?\n              <p className=\"col-8\" style={{color:\"orange\"}}>{this.state.bug.severity}</p>\n            : \n              <p className=\"col-8\" style={{color:\"green\"}}>{this.state.bug.severity}</p>\n            }\n            \n          </Row>\n            \n          <Row className=\"mb-2 border-top\">\n            <div className=\"col-4\">Description</div>\n            <p className=\"col-8\">{this.state.bug.description}</p>\n          </Row>\n          \n          <Row className=\"mb-2\">\n            <div className=\"col-12\">\n              <button className=\" mt-3 btn btn-secondary\" data-target=\"#addSolutionModal\" \n                data-id=\"bugId0001\" onClick={()=> this.setState({show:true})}> \n                <i className=\"far fa-edit\"></i> Add solution\n              </button>\n            </div>\n          </Row>\n\n          <Row className=\"mt-5\">\n            <div className=\"col-md-12 col-lg-12\">\n              <div id=\"tracking\">\n                <div className=\"border pl-3 \" style={{color: \"#300032\"}} >\n                  <h3 >Bug Solutions</h3>\n                </div>\n                <div className=\"tracking-list mt-1\">\n\n                  {this.state.solutions.map((el, index) => (\n                    <VerticalTimeline  key={index} >\n                      <VerticalTimelineElement\n                        className=\"vertical-timeline-element--laravel VerticalTimelineElement vertical-timeline-element \"\n                        contentStyle={{ background: 'rgb(64, 81, 182, 0.25)' }}\n                        contentArrowStyle={{ borderRight: '7px solid  rgb(64, 81, 182, 0.25)' }}\n                        date={<p>{el.date.rapportDayS}, {el.date.rapportTimeS}</p>}\n                        key={el.s._id}\n                        icon={<img src={el.s.user_id.imageURL} className=\"material-icons md-18\" style={{ borderRadius: \"50%\", position: \"absolute\", top: \"0\", left:\"0\"  }} width=\"60\" height=\"60\" alt=\"\" />}\n                        >\n                        <h4 className=\"vertical-timeline-element-title\">{el.s.user_id.firstname} {el.s.user_id.lastname}</h4>\n                        <h5 className=\"vertical-timeline-element-subtitle\">Status: {el.s.status}</h5>\n                        <p>\n                          {el.s.solution}\n                        </p>\n                      </VerticalTimelineElement>\n                    </VerticalTimeline>\n                  ))}\n\n                </div>\n              </div>\n            </div>\n          </Row>\n        </Container>\n        \n        <Modal id=\"addSolutionModal\" tabIndex=\"-1\" role=\"dialog\" show={this.state.show}>\n          <Modal.Header>\n            <Modal.Title id=\"addSolutionModalLabel\">Edit Service</Modal.Title>\n            <Button type=\"button\" onClick={()=> this.setState({show:false, errorMessageEdit:[], dataId:\"\", name:\"\", phone:\"\", email:\"\"})}>\n              <span >&times;</span>\n            </Button>\n          </Modal.Header>\n          \n          {this.state.errorMessage.length > 0 && (\n            <div> {this.state.errorMessage.map((el, index)=> \n              (\n              <Alert key={index} variant={'danger'}>{el}</Alert>\n              ))} \n            </div>\n          )}\n          \n          <Form id=\"popup-add-solution\" onSubmit={this.handleFormSubmit} onReset={this.handleReset}>\n            <Modal.Body>\n              <Form.Group >\n                <Form.Label htmlFor=\"popup-bug-solution\" >Status:</Form.Label>\n                <div className=\"col-sm-10 mt-2\" onChange={this.handleChange}>\n                  <input className=\"ml-3\" type=\"radio\"  name=\"status\" defaultChecked value=\"Confirmed\" />\n                  <Form.Label className=\"ml-1\">Confirmed</Form.Label>\n                  <input className=\"ml-3\" type=\"radio\"  name=\"status\" value=\"In Progress\" />\n                  <Form.Label className=\"ml-1\">InProgress</Form.Label>\n                  <input className=\"ml-3\" type=\"radio\"   name=\"status\" value=\"Resolved\" />\n                  <Form.Label className=\"ml-1\">Resoveld</Form.Label>\n                </div>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label htmlFor=\"popup-bug-solution\" className=\"col-form-label\">Severity:</Form.Label>\n                <div className=\"col-sm-10 mt-2\" onChange={this.handleChange}>\n                  <input className=\"ml-3\" type=\"radio\" name=\"severity\" defaultChecked value=\"Critical\" />\n                  <Form.Label className=\"ml-1\">Critical</Form.Label>\n                  <input className=\"ml-3\" type=\"radio\" name=\"severity\" value=\"High\" />\n                  <Form.Label className=\"ml-1\">High</Form.Label>\n                  <input className=\"ml-3\" type=\"radio\" name=\"severity\" value=\"Medium\" />\n                  <Form.Label className=\"ml-1\">Medium</Form.Label>\n                  <input className=\"ml-3\" type=\"radio\" name=\"severity\" value=\"Low\" />\n                  <Form.Label className=\"ml-1\">Low</Form.Label>\n                </div>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label htmlFor=\"popup-bug-solution\" className=\"col-form-label\">Solution:</Form.Label>\n                <FormControl as=\"textarea\" id=\"sol\"  name=\"solution\" rows=\"3\" \n                placeholder=\"Ex: Some solution...\" onChange={this.handleChange}></FormControl>\n              </Form.Group>             \n            </Modal.Body>\n            <Modal.Footer>\n              <Button type=\"reset\" variant=\"secondary\" >Reset</Button>\n              <Button type=\"submit\" variant=\"primary\"><i className=\" mr-1 far fa-save\"></i>Save</Button>\n            </Modal.Footer>\n          </Form>   \n        </Modal>\n        <Footer/>\n      </Container>          \n    )\n  }\n}\n\n\n","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/auth/User-profil.js",["105","106","107","108","109","110","111","112"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport srv from '../api/apiServ'\nimport { Link, Redirect } from 'react-router-dom';\nimport { Button, Modal, Form, Row, Alert , Col, InputGroup, Table, Container, Spinner, FormGroup} from 'react-bootstrap';\nimport Navbar from '../navs/Navbar'\nimport Footer from '../navs/Footer'\n\n\n\nexport default class userProfil extends Component {\n  state={\n    _id:\"\",\n    firstname:\"\",\n    lastname:\"\",\n    email:\"\",\n    role:\"\",\n    service:\"\",\n    imageURL:\"\",\n    password:\"\",\n    confirmPassword:\"\",\n    listOfServices: [],\n    errorMessage:\"\",\n    successMessage : undefined\n  }\n  \n  componentDidMount() {\n    this.getAllServices();\n  }\n\n  getAllServices = () =>{\n    srv.serviceList()\n    .then(response => {\n      console.log(\"services list\", response)\n      this.setState({\n        listOfServices: response\n      })\n    })\n  }\n  \n  componentDidUpdate(prevProps, prevState){\n    if (!prevProps.user._id && this.props.user._id) {\n      console.log ('componentDidUpdate', this.props.user)\n      this.setState(this.props.user)\n    } \n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n\n  handleUpload=(event) =>{\n    const uploadData = new FormData();\n    uploadData.append('imageURL', event.target.files[0]);\n    srv.upload(uploadData)\n    .then(response =>{\n      this.setState({ imageURL: response.imageURL });\n    })\n    .catch(err => {\n      console.log('Error while uploading the file: ', err);\n    });\n\n  }\n\n  handleReset = (event) => {\n    this.setState({firstname: this.props.user.firstname ,lastname: this.props.user.lastname , role:this.props.user.role , service:this.props.user.service, imageURL:this.props.user.imageURL ,errorMessage: \"\", successMessage:\"\"})\n  }\n\n  handleResetPassword = (event) => {\n    this.setState({password: \"\",confirmPassword: \"\", successMessage:\"\", errorMessage: \"\"})\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"state est : \",this.state)\n    srv.edit(this.state.firstname, this.state.lastname, this.state.service, this.state.role, this.state.password, this.state.confirmPassword, this.state.imageURL)\n      .then(response => {\n        this.setState({password: \"\" , confirmPassword: \"\", errorMessage:[] , successMessage: \"Profil updated successfully\" });\n        console.log('user', response)\n        this.props.updateUser(response);\n        this.props.history.push('/profil');\n      })\n      .catch((error)=> this.setState({errorMessage:error.response.data.message}))\n    \n  }\n\n  showContainer = () => {\n    return(\n      <div>\n        <Button variant=\"primary\" disabled>\n          <Spinner\n            as=\"span\"\n            animation=\"grow\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n          Loading...\n        </Button>\n      </div>\n    )\n  }\n\n  render(){\n    if (!this.props.user._id) return this.showContainer()\n    // if (this.state.user === false) return <Redirect to=\"/\"/>\n    return (\n      <Container fluid>\n        <Navbar user={this.props.user} updateUser={this.props.updateUser} history={this.props.history}/>\n        <Container className=\"border\" style={{textAlign:\"left\" , color: \"#300032\", fontWeight:\"bolder\", marginBottom:\"60px\"}}>\n          <Form.Group as={Row}>\n            <h3 className=\"col-sm-10 mt-1\">My Account</h3>\n            <small className=\"text-secondary form-text text-muted mt-0\">\n              Fill your modifications here\n            </small>\n          </Form.Group >\n          <Form className=\"  border-top pt-4\" onSubmit={this.handleFormSubmit} onReset={this.handleReset}>           \n\n            {this.state.errorMessage && (\n              <div> {this.state.errorMessage.map((el, index)=> \n                (\n                <Alert key={index} variant={'danger'}>{el}</Alert>\n                ))} \n              </div>\n            )}\n            \n            { this.state.successMessage &&\n              <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                <strong>Awsome!</strong>  {this.state.successMessage}\n              </div>\n            }\n\n            <Row>\n              <Form.Group as={Col} md=\"4\"  htmlFor=\"firstname\">\n                <Form.Label className=\"mb-3\" as={Row}>First Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"firstname\"\n                  value={this.state.firstname}\n                  onChange={this.handleChange}\n                  id=\"firstname\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group as={Col} md=\"4\"  htmlFor=\"lastname\">\n                <Form.Label className=\"mb-3\" as={Row}>Last Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"lastname\"\n                  value={this.state.lastname}\n                  onChange={this.handleChange}\n                  id=\"lastname\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n            </Row>\n            \n            <Form.Group as={Col} md=\"8\" >\n              <Form.Label className=\"mb-3\" as={Row}>Email</Form.Label>\n              <Form.Control\n                readOnly\n                type=\"text\"\n                name=\"email\"\n                defaultValue={this.state.email}\n                id=\"email\"\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n\n            <Row style={{paddingLeft: \"16px\"}}>\n              <FormGroup className=\"md-form custom-file\">\n                <i className=\"fa fa-camera prefix grey-text\"></i>\n                <input type=\"file\" className=\"custom-file-input\" name=\"image\" id=\"input-image\" onChange={this.handleUpload}/>\n                <label  htmlFor=\"input-image\" value={this.state.imageURL} >Choose Avatar</label>\n              </FormGroup>\n            </Row>\n        \n            <Row className=\"mt-4 mb-2\">\n              <Col md=\"4\">\n                <Form.Control  as=\"select\"  id=\"inlineFormCustomSelect\" value={this.state.service} name=\"service\" id=\"inputService\" onChange={this.handleChange}  custom>\n                  {/* afficher tous les services dans une boite select */}\n                  <option value=\"\">Service</option>\n                  {this.state.listOfServices.map( service => {\n                    return (\n                      <option key={service._id} value={service._id}>{service.name}</option>\n                    )})\n                  } \n                </Form.Control>\n              </Col>\n              <Col md=\"4\">\n                <Form.Control as=\"select\"\n                  id=\"inlineFormCustomSelect\" value={this.state.role} name=\"role\" id=\"inputRole\" onChange={this.handleChange}  custom>\n                  <option value=\"\">Role</option>\n                  <option value=\"manager\">Manager</option>\n                  <option value=\"employee\">Employee</option>\n                  <option value=\"validator\">Validator</option>                    \n                </Form.Control>       \n              </Col>              \n            </Row>\n            <Row >\n              <button type=\"submit\" className=\"btn btn-primary mt-4\" ><i className=\" mr-1 far fa-save\" ></i>Save</button>\n              <button type=\"reset\" className=\"btn btn-secondary mt-4\">Reset</button>\n            </Row>\n          </Form>\n                    \n          <Form className=\"mt-5  border-top pt-4\"  onSubmit={this.handleFormSubmit } onReset={this.handleResetPassword}>\n            <Row  md=\"8\">\n              <Form.Group as={Col} md=\"4\"  htmlFor=\"inputPassword\">\n                <Form.Label className=\"mb-3\" as={Row}>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                  placeholder=\"********\"\n                  id=\"inputPassword\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"4\"  htmlFor=\"inputConfirmPassword\">\n                <Form.Label className=\"mb-3\" as={Row}>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  value={this.state.confirmPassword}\n                  onChange={this.handleChange}\n                  placeholder=\"********\"\n                  id=\"inputConfirmPassword\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n            </Row>\n            <Row >\n              <button type=\"submit\" className=\"btn btn-primary mt-4\"><i className=\" mr-1 far fa-save\"></i>Save Password</button>\n              <button type=\"reset\" className=\"btn btn-secondary mt-4\">Reset</button>\n            </Row>\n          </Form>\n        </Container>\n        <Footer/>\n      </Container>\n\n    )     \n  }\n}\n","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/navs/Footer.js",[],"/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/navs/Navbar.js",["113","114","115","116"],"import React, { Component } from 'react'\nimport srv from '../api/apiServ';\nimport { Redirect, Link } from 'react-router-dom';\nimport {Navbar, NavDropdown, Nav, Spinner, Button}from 'react-bootstrap'\n\nexport default class NavBar extends Component {\n  state={\n    user:{...this.props.user}\n  }\n\n\n  logout = (event) => {\n    srv.logout()\n      .then(response => {       \n        this.props.updateUser(false);\n        this.props.history.push('/');\n      })\n    ;\n  }\n\n  // showContainer = () => {\n  //   return(\n  //     <div>\n  //       <Button variant=\"primary\" disabled>\n  //         <Spinner\n  //           as=\"span\"\n  //           animation=\"grow\"\n  //           size=\"sm\"\n  //           role=\"status\"\n  //           aria-hidden=\"true\"\n  //         />\n  //         Loading...\n  //       </Button>\n  //     </div>\n  //   )\n  // }\n\n  \n\n\n  render() {\n    return (\n      <>\n        { !this.props.user._id  ?(\n          <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" >\n            {/* <Redirect to=\"/\"/> */}\n            <Navbar.Brand href=\"#home\"><img src=\"https://res.cloudinary.com/dshuazgaz/image/upload/v1605986441/image_9_l2l4wb.png\" style={{height: '50px'}} alt=\"\" /></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"mr-auto\" >\n                <Nav.Link href=\"/signup\">SignUp</Nav.Link>\n                <Nav.Link href=\"/login\">LogIn</Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n        ) \n        :\n        (\n          <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" style={{textAlign:\"left\"}}>\n            <Navbar.Brand href=\"#home\"><img src=\"https://res.cloudinary.com/dshuazgaz/image/upload/v1605986441/image_9_l2l4wb.png\" style={{height: '50px'}} alt=\"\" /></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"mr-auto\" >\n                <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\n                <Nav.Link href=\"/bugs-list\">Bugs List</Nav.Link>\n                <Nav.Link href=\"/services\">Services</Nav.Link>\n                <Nav.Link href=\"/new-bug\">New Bug</Nav.Link>\n\n              </Nav>\n              <Nav>\n                <img\n                  src={this.props.user.imageURL}\n                  width=\"40\"\n                  height=\"40\"\n                  className=\"rounded-circle z-depth-0\"\n                  alt=\"React Bootstrap logo\"\n                />   \n                <NavDropdown title={this.props.user.firstname} eventkey={2} href=\"/\">                    \n                  <NavDropdown.Item href={`/profil`} >My Account</NavDropdown.Item>\n                  <NavDropdown.Item onClick={this.logout} >Logout</NavDropdown.Item>                \n                </NavDropdown>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n        )}\n      </>\n    )\n  }\n}\n",["117","118"],"/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/home/Welcome.js",["119","120","121"],"import React, { Component } from 'react'\nimport {Button, ButtonToolbar, Container,Jumbotron } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport Details from './Details'\nimport Navbar from '../navs/Navbar'\nimport Footer from '../navs/Footer'\n\n\nexport default class Welcome extends Component {\n\n  render() {\n    // console.log(this.props.user)      \n    // {this.props.user._id && <Redirect to=\"/dashboard\" user={this.props.user}/>}\n\n    return (\n      <div style={{marginBottom:\"60px\", height:\"100%\", textAlign: \"center\"}}>\n        <Navbar  user={this.props.user}/>\n        <Jumbotron fluid className=\"mb-5\">\n          <Container fluid>            \n            <img src=\"https://res.cloudinary.com/dshuazgaz/image/upload/v1605986441/image_9_l2l4wb.png\" style={{height: '180px'}} alt=\"\" />\n            <p className=\"lead\" style={{color:\"#0e3662\", fontSize:\"40px\", fontFamily:\"arvo\", paddingBottom: \"50px\"}}>Your favorite tool to manage Bugs</p>\n            <div className=\"cta\" >\n          <Link  className=\"button btn  btn-rounded waves-effect\" style={{borderRadius:\"10px\", fontWeight:\"bold\", fontSize:\"20px\"}} to=\"/signup\" >Sign up</Link>\n          <Link  className=\"button btn  btn-rounded waves-effect\" style={{borderRadius:\"10px\", fontWeight:\"bold\", fontSize:\"20px\"}} to=\"/login\">Log in</Link>\n        </div>\n          </Container>\n        </Jumbotron>\n        \n        <Details/>\n        <Footer/>\n      </div>\n    )\n  }\n}\n","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/home/Details.js",["122","123","124","125","126","127","128","129","130","131"],"import React, { Component } from 'react'\nimport { Link , Redirect} from 'react-router-dom';\nimport {Container, Button, Spinner, Row, Col, Table, Card} from 'react-bootstrap'\n\nexport default class Details extends React.Component  {\n  \n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"d-flex justify-content-around\"  >  \n          <div style={{marginTop:\"50px\"}}>\n            <div>\n              <Card.Body >\n                <Card.Title style={{fontWeight:\"bold\"}}>B-Track ? </Card.Title>\n                <Card.Text >With supporting text below as a natural lead-in to additional content.</Card.Text>\n                <a href=\"#\" className=\"btn\" style={{backgroundColor:\"#3f51b552\", borderRadius:\"10px\", fontWeight:\"bold\"}}>Learn more</a>\n              </Card.Body>\n            </div>\n          </div>\n          \n          <div style={{marginTop:\"50px\"}}> \n            <div>\n              <Card.Body>\n                <Card.Title style={{fontWeight:\"bold\"}}>How?</Card.Title>\n                <Card.Text>With supporting text below as a natural lead-in to additional content.</Card.Text>\n                <a href=\"#\" className=\"btn\" style={{backgroundColor:\"#3f51b552\", borderRadius:\"10px\", fontWeight:\"bold\"}}>Learn more</a>\n              </Card.Body>\n            </div>\n          </div>\n\n          <div style={{marginTop:\"50px\"}}>\n            <div>\n              <Card.Body>\n                <Card.Title style={{fontWeight:\"bold\"}}>About Us?</Card.Title>\n                <Card.Text>With supporting text below as a natural lead-in to additional content.</Card.Text>\n                <a href=\"#\" className=\"btn\" style={{backgroundColor:\"#3f51b552\", borderRadius:\"10px\", fontWeight:\"bold\"}}>Learn more</a>\n              </Card.Body>\n            </div>\n          </div>\n\n        </Row>\n\n      </Container>\n    )\n  }\n}","/mnt/c/Users/marwa/Desktop/B-TrackV3/client/src/component/home/Dashboard.js",["132","133","134","135","136","137","138","139","140"],"import React, { Component } from 'react'\nimport axios from 'axios';\nimport srv from '../api/apiServ';\nimport { Redirect, Link } from 'react-router-dom';\nimport {Container, Button, Spinner, Row, Col, Table, Card} from 'react-bootstrap'\nimport Navbar from \"../navs/Navbar\"\nimport Footer from '../navs/Footer'\nimport {Pie, Doughnut, Polar} from 'react-chartjs-2';\n\n\nexport default class Dashboard extends Component {\n  state={\n    // user:null,\n    priorityBugs:[],\n    dataByStatus:{labels: [],\n                  datasets: [\n                    {\n                      label: '',\n                      backgroundColor: [],\n                      hoverBackgroundColor: [],\n                      data: []\n      }\n    ]},\n    dataBySeverity:{labels: [],\n                  datasets: [\n                    {\n                      label: '',\n                      backgroundColor: [],\n                      hoverBackgroundColor: [],\n                      data: []\n      }\n    ]},\n    \n  }\n\n  componentDidMount() {\n    this.getDataByStatus();\n    this.getDataBySeverity();\n    this.getPriorityBugs();\n  }\n\n  // componentDidUpdate(prevProps, prevState){\n  //   if (!prevProps.user._id && this.props.user._id) {\n  //     console.log ('componentDidUpdate', this.props.user)\n  //     this.setState({user:{...this.props.user}})\n  //   } \n  // }\n\n  getPriorityBugs = () =>{\n    srv.srv.get(`/priority`)\n    .then(responseFromApi => {\n      this.setState({priorityBugs: responseFromApi.data.result})\n    })\n  }\n\n  getDataByStatus = () =>{\n    srv.srv.get(`/repportByStatus`)\n    .then(responseFromApi => {\n      this.setState({dataByStatus:{\n        labels: responseFromApi.data.bugs.bugTypes,\n        datasets: [{label: 'Status',\n                    backgroundColor: [\n                      '#FF6699',\n                      '#FF9933',\n                      '#CCFF33'\n                    ],\n                    hoverBackgroundColor: [\n                    '#CC3366',\n                    '#FF6633',\n                    '#99CC33'\n                    ],\n                    data: responseFromApi.data.bugs.countByType}]}\n      })\n    })\n  }\n  \n  getDataBySeverity = () =>{\n    srv.srv.get(`/repportBySeverity`)\n    .then(responseFromApi => {\n      this.setState({dataBySeverity:{\n        labels: responseFromApi.data.bugs.bugTypes,\n        datasets: [{label: 'Severity',\n                    backgroundColor: [\n                      '#FF4040',\n                      '#FF6699',\n                      '#FF9933',\n                      '#CCFF33'\n                    ],\n                    hoverBackgroundColor: [\n                    '#FF0033',\n                    '#CC3366',\n                    '#FF6633',\n                    '#99CC33'\n                    ],\n                    data: responseFromApi.data.bugs.countByType}]}\n      })\n    })\n  }\n\n  \n\n  // showContainer = () => {\n  //   return(\n  //     <div>\n  //       <Button variant=\"primary\" disabled>\n  //         <Spinner\n  //           as=\"span\"\n  //           animation=\"grow\"\n  //           size=\"sm\"\n  //           role=\"status\"\n  //           aria-hidden=\"true\"\n  //         />\n  //         Loading...\n  //       </Button>\n  //     </div>\n  //   )\n  // }\n\n  render() {\n    // if (this.state.dataByStatus.labels.length === 0 || this.state.dataByStatus.labels.length === 0 || this.state.priorityBugs=== null) return this.showContainer()\n    // if (this.props.user === {} &&  this.state.user === null) return <Redirect to=\"/\"/>\n    // if (this.state.user === null) return this.showContainer()\n    \n    console.log(\"State\", this.state)\n    return (\n      <Container fluid >\n        <Navbar user={this.props.user} updateUser={this.props.updateUser} history={this.props.history}/>\n        <Container fluid style={{textAlign:\"left\" ,marginBottom:\"60px\", height:\"100%\" , color: \"#300032\", fontWeight:\"bolder\"}}>\n          <div >\n            <Card\n              bg=\"ligth\"\n              text={'black'}\n              // style={{ width: '40rem' }}\n              className=\"mb-2\"\n              >\n              <Card.Header>Charts</Card.Header>\n              <Card.Body>\n                <Polar   height={100}\n                  data={this.state.dataByStatus}\n                  options={{\n                    title:{\n                      display:false,\n                      text:'Chart By Status',\n                      fontSize:16\n                    },\n                    legend:{\n                      display:true,\n                      position:'left'\n                    },\n                  }}\n                />\n  \n                <Polar   height={100}\n                  data={this.state.dataBySeverity}\n                  options={{\n                    title:{\n                      display:false,\n                      text:'Chart By Status',\n                      fontSize:16\n                    },\n                    legend:{\n                      display:true,\n                      position:'left'\n                    },\n                  }}\n                />\n              </Card.Body>\n            </Card>\n            <Card\n              bg=\"ligth\"\n              text={'black'}\n              style={{ width: '20rem' }}\n              className=\"mb-2\"\n              >\n              <Card.Header>{this.state.priorityBugs.length} Critical Bugs</Card.Header>\n              <Card.Body>\n                <Card.Title>{this.state.priorityBugs.map((el)=>(\n                  <ul key={el._id}>\n                    <li >\n                      <i style={{color:\"red\"}} className=\"fas fa-exclamation-triangle\"></i>\n                      <Link to={`/bug-details/${el._id}`} style={{color: \"black\"}}>{el.title}</Link>\n                    </li>\n                  </ul>\n                  ))} \n                </Card.Title>\n              </Card.Body>\n            </Card>\n          </div> \n        </Container>\n        <Footer/>\n        \n      </Container>          \n    )\n  }\n}\n",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":159,"column":136,"nodeType":"151","endLine":159,"endColumn":153},{"ruleId":"149","severity":1,"message":"150","line":169,"column":106,"nodeType":"151","endLine":169,"endColumn":120},{"ruleId":"152","severity":1,"message":"153","line":12,"column":1,"nodeType":"154","endLine":103,"endColumn":2},{"ruleId":"145","severity":1,"message":"155","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":2,"column":17,"nodeType":"147","messageId":"148","endLine":2,"endColumn":25},{"ruleId":"145","severity":1,"message":"156","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":24},{"ruleId":"145","severity":1,"message":"157","line":4,"column":79,"nodeType":"147","messageId":"148","endLine":4,"endColumn":86},{"ruleId":"145","severity":1,"message":"158","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":13},{"ruleId":"149","severity":1,"message":"150","line":154,"column":15,"nodeType":"151","endLine":154,"endColumn":28},{"ruleId":"145","severity":1,"message":"158","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"145","severity":1,"message":"157","line":6,"column":60,"nodeType":"147","messageId":"148","endLine":6,"endColumn":67},{"ruleId":"145","severity":1,"message":"146","line":8,"column":16,"nodeType":"147","messageId":"148","endLine":8,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":114,"column":15,"nodeType":"151","endLine":114,"endColumn":28},{"ruleId":"145","severity":1,"message":"158","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"145","severity":1,"message":"156","line":6,"column":10,"nodeType":"147","messageId":"148","endLine":6,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":6,"column":16,"nodeType":"147","messageId":"148","endLine":6,"endColumn":24},{"ruleId":"145","severity":1,"message":"157","line":8,"column":66,"nodeType":"147","messageId":"148","endLine":8,"endColumn":73},{"ruleId":"145","severity":1,"message":"155","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"158","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"145","severity":1,"message":"157","line":8,"column":67,"nodeType":"147","messageId":"148","endLine":8,"endColumn":74},{"ruleId":"145","severity":1,"message":"146","line":13,"column":10,"nodeType":"147","messageId":"148","endLine":13,"endColumn":18},{"ruleId":"145","severity":1,"message":"158","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"145","severity":1,"message":"156","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":4,"column":16,"nodeType":"147","messageId":"148","endLine":4,"endColumn":24},{"ruleId":"145","severity":1,"message":"159","line":5,"column":18,"nodeType":"147","messageId":"148","endLine":5,"endColumn":23},{"ruleId":"145","severity":1,"message":"160","line":5,"column":49,"nodeType":"147","messageId":"148","endLine":5,"endColumn":59},{"ruleId":"145","severity":1,"message":"161","line":5,"column":61,"nodeType":"147","messageId":"148","endLine":5,"endColumn":66},{"ruleId":"149","severity":1,"message":"150","line":182,"column":115,"nodeType":"151","endLine":182,"endColumn":132},{"ruleId":"149","severity":1,"message":"150","line":194,"column":83,"nodeType":"151","endLine":194,"endColumn":97},{"ruleId":"145","severity":1,"message":"146","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":18},{"ruleId":"145","severity":1,"message":"156","line":3,"column":20,"nodeType":"147","messageId":"148","endLine":3,"endColumn":24},{"ruleId":"145","severity":1,"message":"157","line":4,"column":35,"nodeType":"147","messageId":"148","endLine":4,"endColumn":42},{"ruleId":"145","severity":1,"message":"162","line":4,"column":44,"nodeType":"147","messageId":"148","endLine":4,"endColumn":50},{"ruleId":"141","replacedBy":"163"},{"ruleId":"143","replacedBy":"164"},{"ruleId":"145","severity":1,"message":"162","line":2,"column":9,"nodeType":"147","messageId":"148","endLine":2,"endColumn":15},{"ruleId":"145","severity":1,"message":"165","line":2,"column":17,"nodeType":"147","messageId":"148","endLine":2,"endColumn":30},{"ruleId":"145","severity":1,"message":"146","line":3,"column":16,"nodeType":"147","messageId":"148","endLine":3,"endColumn":24},{"ruleId":"145","severity":1,"message":"155","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"156","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":2,"column":17,"nodeType":"147","messageId":"148","endLine":2,"endColumn":25},{"ruleId":"145","severity":1,"message":"162","line":3,"column":20,"nodeType":"147","messageId":"148","endLine":3,"endColumn":26},{"ruleId":"145","severity":1,"message":"157","line":3,"column":28,"nodeType":"147","messageId":"148","endLine":3,"endColumn":35},{"ruleId":"145","severity":1,"message":"166","line":3,"column":42,"nodeType":"147","messageId":"148","endLine":3,"endColumn":45},{"ruleId":"145","severity":1,"message":"161","line":3,"column":47,"nodeType":"147","messageId":"148","endLine":3,"endColumn":52},{"ruleId":"167","severity":1,"message":"168","line":16,"column":17,"nodeType":"169","endLine":16,"endColumn":123},{"ruleId":"167","severity":1,"message":"168","line":26,"column":17,"nodeType":"169","endLine":26,"endColumn":123},{"ruleId":"167","severity":1,"message":"168","line":36,"column":17,"nodeType":"169","endLine":36,"endColumn":123},{"ruleId":"145","severity":1,"message":"158","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"145","severity":1,"message":"146","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":18},{"ruleId":"145","severity":1,"message":"162","line":5,"column":20,"nodeType":"147","messageId":"148","endLine":5,"endColumn":26},{"ruleId":"145","severity":1,"message":"157","line":5,"column":28,"nodeType":"147","messageId":"148","endLine":5,"endColumn":35},{"ruleId":"145","severity":1,"message":"170","line":5,"column":37,"nodeType":"147","messageId":"148","endLine":5,"endColumn":40},{"ruleId":"145","severity":1,"message":"166","line":5,"column":42,"nodeType":"147","messageId":"148","endLine":5,"endColumn":45},{"ruleId":"145","severity":1,"message":"161","line":5,"column":47,"nodeType":"147","messageId":"148","endLine":5,"endColumn":52},{"ruleId":"145","severity":1,"message":"171","line":8,"column":9,"nodeType":"147","messageId":"148","endLine":8,"endColumn":12},{"ruleId":"145","severity":1,"message":"172","line":8,"column":14,"nodeType":"147","messageId":"148","endLine":8,"endColumn":22},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Component' is defined but never used.","'Link' is defined but never used.","'Spinner' is defined but never used.","'axios' is defined but never used.","'Modal' is defined but never used.","'InputGroup' is defined but never used.","'Table' is defined but never used.","'Button' is defined but never used.",["173"],["174"],"'ButtonToolbar' is defined but never used.","'Col' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Row' is defined but never used.","'Pie' is defined but never used.","'Doughnut' is defined but never used.","no-global-assign","no-unsafe-negation"]